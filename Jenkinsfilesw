node('fbnode')
{

def mavenHome = tool name: "maven3.8.5"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * * ')])])

echo "The Job name is: ${env.JOB_NAME}"
echo "The node name is: ${env.NODE_NAME}"
echo "The workspace path name is: ${env.WORKSPACE}"
echo "The node label is: ${env.NODE_LABELS}"
echo "The build number is: ${env.BUILD_NUMBER}"

try{
slacknotifications("STARTED")

stage('CheckoutCode'){
git branch: 'development', credentialsId: '1ebfc92e-639d-4b4e-b7d0-1435fb0ccd25', url: 'https://github.com/swsepbatch-2022/maven-web-application.git'
}
    
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

/*
stage('ExicuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifactsIntoNexus'){
sshagent(['f960f792-0782-4551-854a-ddcd88bd10e5']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.35.175:/opt/apache-tomcat-9.0.65/webapps/"
}

}

*/
}
catch(e){
currentBuild.result = "FAILURE"
throw e
}
finally{
slacknotifications(currentBuild.result)
}

}//Node Closing

def slacknotifications(String buildStatus = 'STARTED') {

buildStatus =  buildStatus ?: 'SUCCESS'

// Default values
def colorName = 'RED'
def colorCode = '#FF0000'
def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

//Override default values based on build status
if (buildStatus == 'STARTED') {
color = 'ORANGE'
colorCode = '#FFA500'
} else if (buildStatus == 'SUCCESS') {
color = 'GREEN'
colorCode = '#00FF00'
} else {
color = 'RED'
colorCode = '#FF0000'
}

// Send notifications
slackSend (color: colorCode, message: summary)
}


